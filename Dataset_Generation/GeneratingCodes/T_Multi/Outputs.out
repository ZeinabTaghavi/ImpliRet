Starting the job
INFO 06-02 11:44:18 [__init__.py:243] Automatically detected platform cuda.
----- Experiment Setup ----
model_name: google/gemma-3-27b-it
track: T
conv_type: Multi
datasets_helping_folder: ./Dataset_Generation/Dataset_Helping
Number of GPUs: 4
---------------------------
Loading the model...
INFO 06-02 11:44:22 [__init__.py:31] Available plugins for group vllm.general_plugins:
INFO 06-02 11:44:22 [__init__.py:33] - lora_filesystem_resolver -> vllm.plugins.lora_resolvers.filesystem_resolver:register_filesystem_resolver
INFO 06-02 11:44:22 [__init__.py:36] All plugins in this group will be loaded. Set `VLLM_PLUGINS` to control which plugins to load.
INFO 06-02 11:44:35 [config.py:793] This model supports multiple tasks: {'generate', 'classify', 'reward', 'embed', 'score'}. Defaulting to 'generate'.
INFO 06-02 11:44:35 [config.py:2118] Chunked prefill is enabled with max_num_batched_tokens=8192.
INFO 06-02 11:44:38 [core.py:438] Waiting for init message from front-end.
INFO 06-02 11:44:38 [core.py:65] Initializing a V1 LLM engine (v0.9.0.1) with config: model='google/gemma-3-27b-it', speculative_config=None, tokenizer='google/gemma-3-27b-it', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=True, dtype=torch.bfloat16, max_seq_len=4096, download_dir='/dss/dssmcmlfs01/pn25pu/pn25pu-dss-0000/taghavi/HuggingFaceCache/', load_format=LoadFormat.AUTO, tensor_parallel_size=4, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=0, served_model_name=google/gemma-3-27b-it, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, pooler_config=None, compilation_config={"level": 3, "custom_ops": ["none"], "splitting_ops": ["vllm.unified_attention", "vllm.unified_attention_with_output"], "compile_sizes": [], "inductor_compile_config": {"enable_auto_functionalized_v2": false}, "use_cudagraph": true, "cudagraph_num_of_warmups": 1, "cudagraph_capture_sizes": [512, 504, 496, 488, 480, 472, 464, 456, 448, 440, 432, 424, 416, 408, 400, 392, 384, 376, 368, 360, 352, 344, 336, 328, 320, 312, 304, 296, 288, 280, 272, 264, 256, 248, 240, 232, 224, 216, 208, 200, 192, 184, 176, 168, 160, 152, 144, 136, 128, 120, 112, 104, 96, 88, 80, 72, 64, 56, 48, 40, 32, 24, 16, 8, 4, 2, 1], "max_capture_size": 512}
INFO 06-02 11:45:12 [ray_utils.py:333] No current placement group found. Creating a new placement group.
INFO 06-02 11:45:12 [ray_distributed_executor.py:176] use_ray_spmd_worker: True
[36m(pid=77571)[0m INFO 06-02 11:45:23 [__init__.py:243] Automatically detected platform cuda.
INFO 06-02 11:45:29 [ray_distributed_executor.py:352] non_carry_over_env_vars from config: set()
INFO 06-02 11:45:29 [ray_distributed_executor.py:354] Copying the following environment variables to workers: ['VLLM_USE_RAY_SPMD_WORKER', 'VLLM_USE_RAY_COMPILED_DAG', 'VLLM_WORKER_MULTIPROC_METHOD', 'VLLM_USE_V1']
INFO 06-02 11:45:29 [ray_distributed_executor.py:357] If certain env vars should NOT be copied to workers, add them to /dss/dsshome1/0B/di38wip/.config/vllm/ray_non_carry_over_env_vars.json file
[36m(RayWorkerWrapper pid=77571)[0m INFO 06-02 11:45:29 [__init__.py:31] Available plugins for group vllm.general_plugins:
[36m(RayWorkerWrapper pid=77571)[0m INFO 06-02 11:45:29 [__init__.py:33] - lora_filesystem_resolver -> vllm.plugins.lora_resolvers.filesystem_resolver:register_filesystem_resolver
[36m(RayWorkerWrapper pid=77571)[0m INFO 06-02 11:45:29 [__init__.py:36] All plugins in this group will be loaded. Set `VLLM_PLUGINS` to control which plugins to load.
[36m(pid=77534)[0m INFO 06-02 11:45:23 [__init__.py:243] Automatically detected platform cuda.[32m [repeated 3x across cluster] (Ray deduplicates logs by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master/ray-observability/user-guides/configure-logging.html#log-deduplication for more options.)[0m
[36m(RayWorkerWrapper pid=77571)[0m WARNING 06-02 11:45:30 [utils.py:2671] Methods determine_num_available_blocks,device_config,get_cache_block_size_bytes,initialize_cache not implemented in <vllm.v1.worker.gpu_worker.Worker object at 0x7fb563f39010>
[36m(RayWorkerWrapper pid=77571)[0m INFO 06-02 11:45:33 [utils.py:1077] Found nccl from library libnccl.so.2
[36m(RayWorkerWrapper pid=77571)[0m INFO 06-02 11:45:33 [pynccl.py:69] vLLM is using nccl==2.26.2
[36m(RayWorkerWrapper pid=77571)[0m INFO 06-02 11:45:36 [custom_all_reduce_utils.py:245] reading GPU P2P access cache from /dss/dsshome1/0B/di38wip/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3.json
[36m(RayWorkerWrapper pid=77551)[0m INFO 06-02 11:45:29 [__init__.py:31] Available plugins for group vllm.general_plugins:[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77551)[0m INFO 06-02 11:45:29 [__init__.py:33] - lora_filesystem_resolver -> vllm.plugins.lora_resolvers.filesystem_resolver:register_filesystem_resolver[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77551)[0m INFO 06-02 11:45:29 [__init__.py:36] All plugins in this group will be loaded. Set `VLLM_PLUGINS` to control which plugins to load.[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77551)[0m WARNING 06-02 11:45:30 [utils.py:2671] Methods determine_num_available_blocks,device_config,get_cache_block_size_bytes,initialize_cache not implemented in <vllm.v1.worker.gpu_worker.Worker object at 0x7f2400639670>[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77571)[0m INFO 06-02 11:45:36 [shm_broadcast.py:250] vLLM message queue communication handle: Handle(local_reader_ranks=[1, 2, 3], buffer_handle=(3, 4194304, 6, 'psm_7dc4ea8a'), local_subscribe_addr='ipc:///tmp/429823f3-a43b-4ad9-8b3e-3f579897fe82', remote_subscribe_addr=None, remote_addr_ipv6=False)
[36m(RayWorkerWrapper pid=77571)[0m INFO 06-02 11:45:36 [parallel_state.py:1064] rank 0 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
[36m(RayWorkerWrapper pid=77513)[0m WARNING 06-02 11:45:48 [topk_topp_sampler.py:58] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[36m(RayWorkerWrapper pid=77551)[0m INFO 06-02 11:45:33 [utils.py:1077] Found nccl from library libnccl.so.2[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77551)[0m INFO 06-02 11:45:33 [pynccl.py:69] vLLM is using nccl==2.26.2[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77551)[0m INFO 06-02 11:45:36 [custom_all_reduce_utils.py:245] reading GPU P2P access cache from /dss/dsshome1/0B/di38wip/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3.json[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77551)[0m INFO 06-02 11:45:36 [parallel_state.py:1064] rank 3 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 3, EP rank 3[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77571)[0m INFO 06-02 11:45:48 [gpu_model_runner.py:1531] Starting to load model google/gemma-3-27b-it...
[36m(RayWorkerWrapper pid=77571)[0m INFO 06-02 11:45:49 [cuda.py:217] Using Flash Attention backend on V1 engine.
[36m(RayWorkerWrapper pid=77571)[0m INFO 06-02 11:45:50 [backends.py:35] Using InductorAdaptor
[36m(RayWorkerWrapper pid=77571)[0m INFO 06-02 11:45:50 [weight_utils.py:291] Using model weights format ['*.safetensors']
[36m(RayWorkerWrapper pid=77551)[0m INFO 06-02 11:46:20 [default_loader.py:280] Loading weights took 29.06 seconds
[36m(RayWorkerWrapper pid=77571)[0m WARNING 06-02 11:45:48 [topk_topp_sampler.py:58] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77551)[0m INFO 06-02 11:45:48 [gpu_model_runner.py:1531] Starting to load model google/gemma-3-27b-it...[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77551)[0m INFO 06-02 11:45:49 [cuda.py:217] Using Flash Attention backend on V1 engine.[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77551)[0m INFO 06-02 11:45:50 [backends.py:35] Using InductorAdaptor[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77551)[0m INFO 06-02 11:45:50 [weight_utils.py:291] Using model weights format ['*.safetensors'][32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77551)[0m INFO 06-02 11:46:20 [gpu_model_runner.py:1549] Model loading took 13.1667 GiB and 31.270549 seconds
[36m(RayWorkerWrapper pid=77571)[0m INFO 06-02 11:46:21 [gpu_model_runner.py:1863] Encoder cache will be initialized with a budget of 8192 tokens, and profiled with 32 image items of the maximum feature size.
[36m(RayWorkerWrapper pid=77571)[0m INFO 06-02 11:46:51 [backends.py:459] Using cache directory: /dss/dsshome1/0B/di38wip/.cache/vllm/torch_compile_cache/29d75a4ef6/rank_0_0 for vLLM's torch.compile
[36m(RayWorkerWrapper pid=77513)[0m INFO 06-02 11:46:20 [default_loader.py:280] Loading weights took 28.31 seconds[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77534)[0m INFO 06-02 11:46:20 [gpu_model_runner.py:1549] Model loading took 13.1667 GiB and 31.446746 seconds[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77551)[0m INFO 06-02 11:46:21 [gpu_model_runner.py:1863] Encoder cache will be initialized with a budget of 8192 tokens, and profiled with 32 image items of the maximum feature size.[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77571)[0m INFO 06-02 11:46:51 [backends.py:469] Dynamo bytecode transform time: 24.16 s
[36m(RayWorkerWrapper pid=77571)[0m INFO 06-02 11:47:17 [backends.py:132] Directly load the compiled graph(s) for shape None from the cache, took 24.435 s
[36m(RayWorkerWrapper pid=77534)[0m INFO 06-02 11:46:55 [backends.py:459] Using cache directory: /dss/dsshome1/0B/di38wip/.cache/vllm/torch_compile_cache/29d75a4ef6/rank_2_0 for vLLM's torch.compile[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77534)[0m INFO 06-02 11:46:55 [backends.py:469] Dynamo bytecode transform time: 28.28 s[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77571)[0m INFO 06-02 11:47:30 [monitor.py:33] torch.compile takes 24.16 s in total
[36m(RayWorkerWrapper pid=77513)[0m INFO 06-02 11:47:21 [backends.py:132] Directly load the compiled graph(s) for shape None from the cache, took 24.731 s[32m [repeated 3x across cluster][0m
INFO 06-02 11:47:31 [kv_cache_utils.py:637] GPU KV cache size: 483,200 tokens
INFO 06-02 11:47:31 [kv_cache_utils.py:640] Maximum concurrency for 4,096 tokens per request: 117.97x
INFO 06-02 11:47:31 [kv_cache_utils.py:637] GPU KV cache size: 480,816 tokens
INFO 06-02 11:47:31 [kv_cache_utils.py:640] Maximum concurrency for 4,096 tokens per request: 117.39x
INFO 06-02 11:47:31 [kv_cache_utils.py:637] GPU KV cache size: 483,200 tokens
INFO 06-02 11:47:31 [kv_cache_utils.py:640] Maximum concurrency for 4,096 tokens per request: 117.97x
INFO 06-02 11:47:31 [kv_cache_utils.py:637] GPU KV cache size: 480,816 tokens
INFO 06-02 11:47:31 [kv_cache_utils.py:640] Maximum concurrency for 4,096 tokens per request: 117.39x
[36m(RayWorkerWrapper pid=77534)[0m INFO 06-02 11:48:22 [custom_all_reduce.py:195] Registering 8308 cuda graph addresses
[36m(RayWorkerWrapper pid=77551)[0m INFO 06-02 11:47:30 [monitor.py:33] torch.compile takes 26.17 s in total[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=77551)[0m INFO 06-02 11:48:23 [gpu_model_runner.py:1933] Graph capturing finished in 51 secs, took 4.04 GiB
INFO 06-02 11:48:23 [core.py:167] init engine (profile, create kv cache, warmup model) took 122.14 seconds
Model loaded successfully using vLLM.
---------------------------------------- Generating the conversations ----------------------------------------
length of prompts_conversation_generation:  1500
Generating outputs in step 1...
INFO 06-02 11:48:42 [chat_utils.py:419] Detected the chat template content format to be 'openai'. You can set `--chat-template-content-format` to override this.
INFO 06-02 11:48:44 [ray_distributed_executor.py:561] VLLM_USE_RAY_COMPILED_DAG_CHANNEL_TYPE = auto
INFO 06-02 11:48:44 [ray_distributed_executor.py:563] VLLM_USE_RAY_COMPILED_DAG_OVERLAP_COMM = False
INFO 06-02 11:48:44 [ray_distributed_executor.py:578] RAY_CGRAPH_get_timeout is set to 300
len(conversation_list) 1500
End of step 1
mistaken_extracted_idx: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499]
---------------------------------------- Hard Attempt 0 of 20 ----------------------------------------
Soft Attempt 0 of 35
len(conversation_list) 1500
Number of mistaken generated outputs: 0
Number of generated outputs: 1500
No mistaken generated outputs
len(conversation_list) 1500
Number of mistaken generated outputs: 0
Number of generated outputs: 1500
Number of mistaken generated conversations: 0
Number of generated conversations: 1500
Generating extractions...
1 - Number of extractions that will be generated: 1500
2 - Regenerating works if needed
Regenerating works: Attempt 0 of 35
Regenerating works: Attempt 1 of 35
Regenerating works: Attempt 2 of 35
Regenerating works: Attempt 3 of 35
Regenerating works: Attempt 4 of 35
Regenerating works: Attempt 5 of 35
Regenerating works: Attempt 6 of 35
Regenerating works: Attempt 7 of 35
Regenerating works: Attempt 8 of 35
Regenerating works: Attempt 9 of 35
Regenerating works: Attempt 10 of 35
Regenerating works: Attempt 11 of 35
Regenerating works: Attempt 12 of 35
Regenerating works: Attempt 13 of 35
Regenerating works: Attempt 14 of 35
Regenerating works: Attempt 15 of 35
Regenerating works: Attempt 16 of 35
Regenerating works: Attempt 17 of 35
Regenerating works: Attempt 18 of 35
Regenerating works: Attempt 19 of 35
Regenerating works: Attempt 20 of 35
Regenerating works: Attempt 21 of 35
Regenerating works: Attempt 22 of 35
Regenerating works: Attempt 23 of 35
Regenerating works: Attempt 24 of 35
Regenerating works: Attempt 25 of 35
Regenerating works: Attempt 26 of 35
Regenerating works: Attempt 27 of 35
Regenerating works: Attempt 28 of 35
Regenerating works: Attempt 29 of 35
Regenerating works: Attempt 30 of 35
Regenerating works: Attempt 31 of 35
Regenerating works: Attempt 32 of 35
Regenerating works: Attempt 33 of 35
Regenerating works: Attempt 34 of 35
Number of mistaken works in after 20 attempts: 109
3 - Regenerating conversation if needed...
Number of mistaken works in after 35 attempts: 109
Number of mistaken extractions: 39
[31, 34, 49, 59, 134, 189, 194, 313, 315, 427, 434, 477, 525, 544, 737, 743, 745, 757, 761, 765, 773, 778, 780, 785, 786, 801, 806, 886, 991, 996, 1002, 1005, 1078, 1225, 1340, 1370, 1448, 1451, 1457]
Number of extractions: 1500
+++++++++++++++++++++++++++++++++++++++++++++
---------------------------------------- Hard Attempt 1 of 20 ----------------------------------------
Soft Attempt 0 of 35
len(conversation_list) 1500
Number of mistaken generated outputs: 0
Number of generated outputs: 1500
No mistaken generated outputs
len(conversation_list) 1500
Number of mistaken generated outputs: 0
Number of generated outputs: 1500
Number of mistaken generated conversations: 0
Number of generated conversations: 1500
Generating extractions...
1 - Number of extractions that will be generated: 39
2 - Regenerating works if needed
Regenerating works: Attempt 0 of 35
Regenerating works: Attempt 1 of 35
Regenerating works: Attempt 2 of 35
Regenerating works: Attempt 3 of 35
Regenerating works: Attempt 4 of 35
Regenerating works: Attempt 5 of 35
Regenerating works: Attempt 6 of 35
Regenerating works: Attempt 7 of 35
Regenerating works: Attempt 8 of 35
Regenerating works: Attempt 9 of 35
Regenerating works: Attempt 10 of 35
Regenerating works: Attempt 11 of 35
Regenerating works: Attempt 12 of 35
Regenerating works: Attempt 13 of 35
Regenerating works: Attempt 14 of 35
Regenerating works: Attempt 15 of 35
Regenerating works: Attempt 16 of 35
Regenerating works: Attempt 17 of 35
Regenerating works: Attempt 18 of 35
Regenerating works: Attempt 19 of 35
Regenerating works: Attempt 20 of 35
Regenerating works: Attempt 21 of 35
Regenerating works: Attempt 22 of 35
Regenerating works: Attempt 23 of 35
Regenerating works: Attempt 24 of 35
Regenerating works: Attempt 25 of 35
Regenerating works: Attempt 26 of 35
Regenerating works: Attempt 27 of 35
Regenerating works: Attempt 28 of 35
Regenerating works: Attempt 29 of 35
Regenerating works: Attempt 30 of 35
Regenerating works: Attempt 31 of 35
Regenerating works: Attempt 32 of 35
Regenerating works: Attempt 33 of 35
Regenerating works: Attempt 34 of 35
Number of mistaken works in after 20 attempts: 34
3 - Regenerating conversation if needed...
Number of mistaken works in after 35 attempts: 34
Number of mistaken extractions: 15
[49, 59, 427, 434, 477, 745, 757, 765, 801, 806, 991, 996, 1225, 1370, 1448]
Number of extractions: 1500
+++++++++++++++++++++++++++++++++++++++++++++
---------------------------------------- Hard Attempt 2 of 20 ----------------------------------------
Soft Attempt 0 of 35
len(conversation_list) 1500
Number of mistaken generated outputs: 0
Number of generated outputs: 1500
No mistaken generated outputs
len(conversation_list) 1500
Number of mistaken generated outputs: 0
Number of generated outputs: 1500
Number of mistaken generated conversations: 0
Number of generated conversations: 1500
Generating extractions...
1 - Number of extractions that will be generated: 15
2 - Regenerating works if needed
Regenerating works: Attempt 0 of 35
Regenerating works: Attempt 1 of 35
Regenerating works: Attempt 2 of 35
Regenerating works: Attempt 3 of 35
Regenerating works: Attempt 4 of 35
Regenerating works: Attempt 5 of 35
Regenerating works: Attempt 6 of 35
Regenerating works: Attempt 7 of 35
Regenerating works: Attempt 8 of 35
Regenerating works: Attempt 9 of 35
Regenerating works: Attempt 10 of 35
Regenerating works: Attempt 11 of 35
Regenerating works: Attempt 12 of 35
Regenerating works: Attempt 13 of 35
Regenerating works: Attempt 14 of 35
Regenerating works: Attempt 15 of 35
Regenerating works: Attempt 16 of 35
Regenerating works: Attempt 17 of 35
Regenerating works: Attempt 18 of 35
Regenerating works: Attempt 19 of 35
Regenerating works: Attempt 20 of 35
Regenerating works: Attempt 21 of 35
Regenerating works: Attempt 22 of 35
Regenerating works: Attempt 23 of 35
Regenerating works: Attempt 24 of 35
Regenerating works: Attempt 25 of 35
Regenerating works: Attempt 26 of 35
Regenerating works: Attempt 27 of 35
Regenerating works: Attempt 28 of 35
Regenerating works: Attempt 29 of 35
Regenerating works: Attempt 30 of 35
Regenerating works: Attempt 31 of 35
Regenerating works: Attempt 32 of 35
Regenerating works: Attempt 33 of 35
Regenerating works: Attempt 34 of 35
Number of mistaken works in after 20 attempts: 13
3 - Regenerating conversation if needed...
Number of mistaken works in after 35 attempts: 13
Number of mistaken extractions: 7
[59, 427, 477, 745, 806, 996, 1225]
Number of extractions: 1500
+++++++++++++++++++++++++++++++++++++++++++++
---------------------------------------- Hard Attempt 3 of 20 ----------------------------------------
Soft Attempt 0 of 35
len(conversation_list) 1500
Number of mistaken generated outputs: 0
Number of generated outputs: 1500
No mistaken generated outputs
len(conversation_list) 1500
Number of mistaken generated outputs: 0
Number of generated outputs: 1500
Number of mistaken generated conversations: 0
Number of generated conversations: 1500
Generating extractions...
1 - Number of extractions that will be generated: 7
2 - Regenerating works if needed
Regenerating works: Attempt 0 of 35
Regenerating works: Attempt 1 of 35
Regenerating works: Attempt 2 of 35
Regenerating works: Attempt 3 of 35
Regenerating works: Attempt 4 of 35
Regenerating works: Attempt 5 of 35
Regenerating works: Attempt 6 of 35
Regenerating works: Attempt 7 of 35
Regenerating works: Attempt 8 of 35
Regenerating works: Attempt 9 of 35
Regenerating works: Attempt 10 of 35
Regenerating works: Attempt 11 of 35
Regenerating works: Attempt 12 of 35
Regenerating works: Attempt 13 of 35
Regenerating works: Attempt 14 of 35
Regenerating works: Attempt 15 of 35
Regenerating works: Attempt 16 of 35
Regenerating works: Attempt 17 of 35
Regenerating works: Attempt 18 of 35
Regenerating works: Attempt 19 of 35
Regenerating works: Attempt 20 of 35
Regenerating works: Attempt 21 of 35
Regenerating works: Attempt 22 of 35
Regenerating works: Attempt 23 of 35
Regenerating works: Attempt 24 of 35
Regenerating works: Attempt 25 of 35
Regenerating works: Attempt 26 of 35
Regenerating works: Attempt 27 of 35
Regenerating works: Attempt 28 of 35
Regenerating works: Attempt 29 of 35
Regenerating works: Attempt 30 of 35
Regenerating works: Attempt 31 of 35
Regenerating works: Attempt 32 of 35
Regenerating works: Attempt 33 of 35
Regenerating works: Attempt 34 of 35
Number of mistaken works in after 20 attempts: 7
3 - Regenerating conversation if needed...
Number of mistaken works in after 35 attempts: 7
Number of mistaken extractions: 2
[745, 806]
Number of extractions: 1500
+++++++++++++++++++++++++++++++++++++++++++++
---------------------------------------- Hard Attempt 4 of 20 ----------------------------------------
Soft Attempt 0 of 35
len(conversation_list) 1500
Number of mistaken generated outputs: 0
Number of generated outputs: 1500
No mistaken generated outputs
len(conversation_list) 1500
Number of mistaken generated outputs: 0
Number of generated outputs: 1500
Number of mistaken generated conversations: 0
Number of generated conversations: 1500
Generating extractions...
1 - Number of extractions that will be generated: 2
2 - Regenerating works if needed
Regenerating works: Attempt 0 of 35
Regenerating works: Attempt 1 of 35
Regenerating works: Attempt 2 of 35
Regenerating works: Attempt 3 of 35
Regenerating works: Attempt 4 of 35
Regenerating works: Attempt 5 of 35
Regenerating works: Attempt 6 of 35
Regenerating works: Attempt 7 of 35
Regenerating works: Attempt 8 of 35
Regenerating works: Attempt 9 of 35
Regenerating works: Attempt 10 of 35
Regenerating works: Attempt 11 of 35
Regenerating works: Attempt 12 of 35
Regenerating works: Attempt 13 of 35
Regenerating works: Attempt 14 of 35
Regenerating works: Attempt 15 of 35
Regenerating works: Attempt 16 of 35
Regenerating works: Attempt 17 of 35
Regenerating works: Attempt 18 of 35
Regenerating works: Attempt 19 of 35
Regenerating works: Attempt 20 of 35
Regenerating works: Attempt 21 of 35
Regenerating works: Attempt 22 of 35
Regenerating works: Attempt 23 of 35
Regenerating works: Attempt 24 of 35
Regenerating works: Attempt 25 of 35
Regenerating works: Attempt 26 of 35
Regenerating works: Attempt 27 of 35
Regenerating works: Attempt 28 of 35
Regenerating works: Attempt 29 of 35
Regenerating works: Attempt 30 of 35
Regenerating works: Attempt 31 of 35
Regenerating works: Attempt 32 of 35
Regenerating works: Attempt 33 of 35
Regenerating works: Attempt 34 of 35
Number of mistaken works in after 20 attempts: 2
3 - Regenerating conversation if needed...
Number of mistaken works in after 35 attempts: 2
INFO 06-02 11:55:26 [ray_distributed_executor.py:127] Shutting down Ray distributed executor. If you see error log from logging.cc regarding SIGTERM received, please ignore because this is the expected termination process in Ray.
Number of mistaken extractions: 0
[]
Number of extractions: 1500
+++++++++++++++++++++++++++++++++++++++++++++
saving outputs...
outputs saved: 
 ./Dataset_Generation/Dataset_Helping/T_Multi/T_Multi_Structured_Generated_conversation.jsonl 
 ./Dataset_Generation/Dataset_Helping/T_Multi/T_Multi_Structured_Generated_feature_extraction.jsonl
0
---------------------------------------- Dataset Generation Completed ----------------------------------------
Process group destroyed.
Job finished
