Starting the job
INFO 06-08 09:47:47 [__init__.py:243] Automatically detected platform cuda.
----- Experiment Setup ----
model_name: google/gemma-3-27b-it
track: S
conv_type: Uni
datasets_helping_folder: ./Dataset_Generation/Dataset_Helping
Number of GPUs: 4
---------------------------
Loading the model...
INFO 06-08 09:47:56 [__init__.py:31] Available plugins for group vllm.general_plugins:
INFO 06-08 09:47:56 [__init__.py:33] - lora_filesystem_resolver -> vllm.plugins.lora_resolvers.filesystem_resolver:register_filesystem_resolver
INFO 06-08 09:47:56 [__init__.py:36] All plugins in this group will be loaded. Set `VLLM_PLUGINS` to control which plugins to load.
INFO 06-08 09:48:12 [config.py:793] This model supports multiple tasks: {'classify', 'embed', 'score', 'generate', 'reward'}. Defaulting to 'generate'.
INFO 06-08 09:48:12 [config.py:2118] Chunked prefill is enabled with max_num_batched_tokens=16384.
INFO 06-08 09:48:16 [core.py:438] Waiting for init message from front-end.
INFO 06-08 09:48:16 [core.py:65] Initializing a V1 LLM engine (v0.9.0.1) with config: model='google/gemma-3-27b-it', speculative_config=None, tokenizer='google/gemma-3-27b-it', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=True, dtype=torch.bfloat16, max_seq_len=4096, download_dir='/dss/dssmcmlfs01/pn25pu/pn25pu-dss-0000/taghavi/HuggingFaceCache/', load_format=LoadFormat.AUTO, tensor_parallel_size=4, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=0, served_model_name=google/gemma-3-27b-it, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, pooler_config=None, compilation_config={"level": 3, "custom_ops": ["none"], "splitting_ops": ["vllm.unified_attention", "vllm.unified_attention_with_output"], "compile_sizes": [], "inductor_compile_config": {"enable_auto_functionalized_v2": false}, "use_cudagraph": true, "cudagraph_num_of_warmups": 1, "cudagraph_capture_sizes": [512, 504, 496, 488, 480, 472, 464, 456, 448, 440, 432, 424, 416, 408, 400, 392, 384, 376, 368, 360, 352, 344, 336, 328, 320, 312, 304, 296, 288, 280, 272, 264, 256, 248, 240, 232, 224, 216, 208, 200, 192, 184, 176, 168, 160, 152, 144, 136, 128, 120, 112, 104, 96, 88, 80, 72, 64, 56, 48, 40, 32, 24, 16, 8, 4, 2, 1], "max_capture_size": 512}
INFO 06-08 09:48:34 [ray_utils.py:333] No current placement group found. Creating a new placement group.
INFO 06-08 09:48:34 [ray_distributed_executor.py:176] use_ray_spmd_worker: True
[36m(pid=1782651)[0m INFO 06-08 09:48:44 [__init__.py:243] Automatically detected platform cuda.
INFO 06-08 09:48:53 [ray_distributed_executor.py:352] non_carry_over_env_vars from config: set()
INFO 06-08 09:48:53 [ray_distributed_executor.py:354] Copying the following environment variables to workers: ['VLLM_USE_RAY_SPMD_WORKER', 'VLLM_USE_RAY_COMPILED_DAG', 'VLLM_WORKER_MULTIPROC_METHOD', 'VLLM_USE_V1']
INFO 06-08 09:48:53 [ray_distributed_executor.py:357] If certain env vars should NOT be copied to workers, add them to /dss/dsshome1/0B/di38wip/.config/vllm/ray_non_carry_over_env_vars.json file
[36m(RayWorkerWrapper pid=1782651)[0m INFO 06-08 09:48:53 [__init__.py:31] Available plugins for group vllm.general_plugins:
[36m(RayWorkerWrapper pid=1782651)[0m INFO 06-08 09:48:53 [__init__.py:33] - lora_filesystem_resolver -> vllm.plugins.lora_resolvers.filesystem_resolver:register_filesystem_resolver
[36m(RayWorkerWrapper pid=1782651)[0m INFO 06-08 09:48:53 [__init__.py:36] All plugins in this group will be loaded. Set `VLLM_PLUGINS` to control which plugins to load.
[36m(pid=1782662)[0m INFO 06-08 09:48:45 [__init__.py:243] Automatically detected platform cuda.[32m [repeated 3x across cluster] (Ray deduplicates logs by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master/ray-observability/user-guides/configure-logging.html#log-deduplication for more options.)[0m
[36m(RayWorkerWrapper pid=1782651)[0m WARNING 06-08 09:48:55 [utils.py:2671] Methods determine_num_available_blocks,device_config,get_cache_block_size_bytes,initialize_cache not implemented in <vllm.v1.worker.gpu_worker.Worker object at 0x7fa6101593d0>
[36m(RayWorkerWrapper pid=1782651)[0m INFO 06-08 09:49:01 [utils.py:1077] Found nccl from library libnccl.so.2
[36m(RayWorkerWrapper pid=1782651)[0m INFO 06-08 09:49:01 [pynccl.py:69] vLLM is using nccl==2.26.2
[36m(RayWorkerWrapper pid=1782647)[0m INFO 06-08 09:48:53 [__init__.py:31] Available plugins for group vllm.general_plugins:[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782647)[0m INFO 06-08 09:48:53 [__init__.py:33] - lora_filesystem_resolver -> vllm.plugins.lora_resolvers.filesystem_resolver:register_filesystem_resolver[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782647)[0m INFO 06-08 09:48:53 [__init__.py:36] All plugins in this group will be loaded. Set `VLLM_PLUGINS` to control which plugins to load.[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782647)[0m WARNING 06-08 09:48:55 [utils.py:2671] Methods determine_num_available_blocks,device_config,get_cache_block_size_bytes,initialize_cache not implemented in <vllm.v1.worker.gpu_worker.Worker object at 0x7f975fbda150>[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782651)[0m INFO 06-08 09:49:13 [custom_all_reduce_utils.py:245] reading GPU P2P access cache from /dss/dsshome1/0B/di38wip/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3.json
[36m(RayWorkerWrapper pid=1782647)[0m INFO 06-08 09:49:01 [utils.py:1077] Found nccl from library libnccl.so.2[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782647)[0m INFO 06-08 09:49:01 [pynccl.py:69] vLLM is using nccl==2.26.2[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782651)[0m INFO 06-08 09:49:13 [shm_broadcast.py:250] vLLM message queue communication handle: Handle(local_reader_ranks=[1, 2, 3], buffer_handle=(3, 4194304, 6, 'psm_a1e58dac'), local_subscribe_addr='ipc:///tmp/87795b94-e4df-4a73-bd3f-050efc3e4e68', remote_subscribe_addr=None, remote_addr_ipv6=False)
[36m(RayWorkerWrapper pid=1782651)[0m INFO 06-08 09:49:13 [parallel_state.py:1064] rank 0 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
[36m(RayWorkerWrapper pid=1782662)[0m WARNING 06-08 09:49:24 [topk_topp_sampler.py:58] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[36m(RayWorkerWrapper pid=1782647)[0m INFO 06-08 09:49:13 [custom_all_reduce_utils.py:245] reading GPU P2P access cache from /dss/dsshome1/0B/di38wip/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3.json[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782647)[0m INFO 06-08 09:49:13 [parallel_state.py:1064] rank 3 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 3, EP rank 3[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782651)[0m INFO 06-08 09:49:24 [gpu_model_runner.py:1531] Starting to load model google/gemma-3-27b-it...
[36m(RayWorkerWrapper pid=1782651)[0m INFO 06-08 09:49:24 [cuda.py:217] Using Flash Attention backend on V1 engine.
[36m(RayWorkerWrapper pid=1782651)[0m INFO 06-08 09:49:26 [backends.py:35] Using InductorAdaptor
[36m(RayWorkerWrapper pid=1782651)[0m INFO 06-08 09:49:26 [weight_utils.py:291] Using model weights format ['*.safetensors']
[36m(RayWorkerWrapper pid=1782659)[0m INFO 06-08 09:49:47 [default_loader.py:280] Loading weights took 20.60 seconds
[36m(RayWorkerWrapper pid=1782659)[0m WARNING 06-08 09:49:24 [topk_topp_sampler.py:58] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782647)[0m INFO 06-08 09:49:24 [gpu_model_runner.py:1531] Starting to load model google/gemma-3-27b-it...[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782647)[0m INFO 06-08 09:49:24 [cuda.py:217] Using Flash Attention backend on V1 engine.[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782647)[0m INFO 06-08 09:49:26 [backends.py:35] Using InductorAdaptor[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782647)[0m INFO 06-08 09:49:26 [weight_utils.py:291] Using model weights format ['*.safetensors'][32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782659)[0m INFO 06-08 09:49:48 [gpu_model_runner.py:1549] Model loading took 13.1667 GiB and 23.147159 seconds
[36m(RayWorkerWrapper pid=1782651)[0m INFO 06-08 09:49:49 [gpu_model_runner.py:1863] Encoder cache will be initialized with a budget of 16384 tokens, and profiled with 64 image items of the maximum feature size.
[36m(RayWorkerWrapper pid=1782662)[0m INFO 06-08 09:50:16 [backends.py:459] Using cache directory: /dss/dsshome1/0B/di38wip/.cache/vllm/torch_compile_cache/8774ded6a2/rank_1_0 for vLLM's torch.compile
[36m(RayWorkerWrapper pid=1782662)[0m INFO 06-08 09:50:16 [backends.py:469] Dynamo bytecode transform time: 19.98 s
[36m(RayWorkerWrapper pid=1782647)[0m INFO 06-08 09:49:48 [default_loader.py:280] Loading weights took 21.01 seconds[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782647)[0m INFO 06-08 09:49:49 [gpu_model_runner.py:1549] Model loading took 13.1667 GiB and 23.916898 seconds[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782647)[0m INFO 06-08 09:49:49 [gpu_model_runner.py:1863] Encoder cache will be initialized with a budget of 16384 tokens, and profiled with 64 image items of the maximum feature size.[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782662)[0m INFO 06-08 09:50:39 [backends.py:132] Directly load the compiled graph(s) for shape None from the cache, took 21.575 s
[36m(RayWorkerWrapper pid=1782659)[0m INFO 06-08 09:50:21 [backends.py:459] Using cache directory: /dss/dsshome1/0B/di38wip/.cache/vllm/torch_compile_cache/8774ded6a2/rank_2_0 for vLLM's torch.compile[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782659)[0m INFO 06-08 09:50:21 [backends.py:469] Dynamo bytecode transform time: 24.67 s[32m [repeated 3x across cluster][0m
[36m(RayWorkerWrapper pid=1782651)[0m INFO 06-08 09:50:52 [monitor.py:33] torch.compile takes 21.44 s in total
[36m(RayWorkerWrapper pid=1782659)[0m INFO 06-08 09:50:44 [backends.py:132] Directly load the compiled graph(s) for shape None from the cache, took 21.413 s[32m [repeated 3x across cluster][0m
INFO 06-08 09:51:01 [kv_cache_utils.py:637] GPU KV cache size: 521,776 tokens
INFO 06-08 09:51:01 [kv_cache_utils.py:640] Maximum concurrency for 4,096 tokens per request: 127.39x
INFO 06-08 09:51:01 [kv_cache_utils.py:637] GPU KV cache size: 520,048 tokens
INFO 06-08 09:51:01 [kv_cache_utils.py:640] Maximum concurrency for 4,096 tokens per request: 126.96x
INFO 06-08 09:51:01 [kv_cache_utils.py:637] GPU KV cache size: 520,048 tokens
INFO 06-08 09:51:01 [kv_cache_utils.py:640] Maximum concurrency for 4,096 tokens per request: 126.96x
INFO 06-08 09:51:01 [kv_cache_utils.py:637] GPU KV cache size: 521,776 tokens
INFO 06-08 09:51:01 [kv_cache_utils.py:640] Maximum concurrency for 4,096 tokens per request: 127.39x
